---
import BlogPreview from "../../../components/BlogPreview.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
// import BlogFilters from "../../../components/BlogFilters";
// import { squish } from "../../../utils/textUtils";
import BaseLayout from "../../../layouts/BaseLayout.astro";

const allPosts = (await getCollection("blog"))
  .filter((post) => process.env.NODE_ENV === "development" || !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const { category } = Astro.params;
let filteredPosts: CollectionEntry<"blog">[] = [];

if (!category) {
  Astro.redirect("/blog");
} else {
  filteredPosts = allPosts.filter(
    (post) => post.data.category?.includes(category)
  );
}

// Add the default filter "All"
// const filters = [
//   {
//     id: "all",
//     name: "All",
//   },
//   ...[...new Set(allPosts.map((posts) => posts.data.category))]
//     .filter(Boolean) // Remove any undefined or null values
//     .map((category) => ({
//       id: squish(category),
//       name: category,
//     })),
// ];

// Get the path without the domain
// const path = new URL(Astro.request.url).pathname;
const title = `${SITE_TITLE} | Blog`;
---

<BaseLayout title={title} description={SITE_DESCRIPTION}>
    <main
      class="flex flex-col gap-4 align-middle items-center justify-center w-screen dark:bg-gray-900 dark:text-gray-50 min-h-(--screen-height)"
    >
      <div class="bg-background py-4 sm:py-4">
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="mx-auto max-w-2xl lg:max-w-4xl">
            <h2
              class="text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl"
            >
              {
                filteredPosts.length > 0
                  ? `Posts tagged with "${category}"`
                  : `No posts with ${category} tag found.`
              }
            </h2>
            <!-- <BlogFilters filters={filters} pathname={path} client:load/> -->
            <!--<p class="mt-2 text-lg leading-8 text-gray-600 dark:text-gray-300">
              Learn how to grow your business with our expert advice.
            </p> -->
            <div class="mt-4 space-y-20 lg:mt-8 lg:space-y-20">
              {filteredPosts.map((post) => <BlogPreview post={post} />)}
            </div>
          </div>
        </div>
      </div>
    </main>
</BaseLayout>