---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { JOB_TITLE } from "../consts";

import me from "../assets/me.png";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags, category } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <main class="dark:bg-gray-900 dark:text-gray-50 flex flex-col items-center">
      {
        heroImage && (
          <img
            class="object-cover border-b-2 shadow-md dark:shadow-sm w-screen max-h-96 mb-8"
            src={heroImage}
            alt={title}
          />
        )
      }
      <article
        class="prose dark:prose-invert prose-code:bg-slate-200 prose-code:text-slate-800 dark:prose-code:bg-gray-800 dark:prose-code:text-gray-100 flex flex-col prose-base p-4 md:p-0"
      >
        <h1 class="text-4xl mt-2">{title}</h1>
        <div class="flex items-center gap-x-6">
          <img
            class="h-28 w-28 rounded-full object-cover"
            src={me.src}
            alt=""
          />
          <div>
            <h3
              class="text-base font-semibold leading-7 tracking-tight text-gray-900"
            >
              Jake Hayes
            </h3>
            <p class="text-sm font-semibold leading-6 text-indigo-600 -mt-2">
              {JOB_TITLE}
            </p>
            <div class="-mt-6">
              <FormattedDate date={pubDate} />
            </div>
            {
              updatedDate && (
                <div class="italic -mt-2">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
        </div>
        {
          category && (
            <h6>
              <a
                class="text-sm font-semibold leading-6 text-indigo-600 no-underline hover:underline"
                href={`/tag/${String(category)}/`}
              >
                {category}
              </a>
            </h6>
          )
        }
        {
          tags && (
            <ul class="inline-flex flex-wrap gap-x-2 gap-y-1 list-none pl-0 -my-2">
              {tags.map((tag) => (
                <li>
                  <a
                    class="text-sm font-thin text-indigo-600 no-underline hover:underline"
                    href={`/tag/${String(tag)}/`}
                  >
                    #{tag}
                  </a>
                </li>
              ))}
            </ul>
          )
        }
        <hr class="my-4" />
        <slot />
      </article>
    </main>
    <Footer />
  </body>
</html>
