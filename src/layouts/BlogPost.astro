---
import { marked } from "marked";
import type { CollectionEntry } from "astro:content";
import Disqus from "../components/Disqus.tsx";
import RelatedPosts from "../components/RelatedPosts.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { getRelatedPosts } from "../utils/postHelper";
import ShareButtons from "../components/ShareButtons.astro";

import me from "../assets/me.png";
import UserAvatar from "../components/UserAvatar.tsx";

type Props = CollectionEntry<"blog">["data"];

const { title, pubDate, updatedDate, heroImage, tags, category, description, imageCaption, imageAlt } =
  Astro.props;

const htmlCaption = imageCaption ? marked.parse(imageCaption) : "";

const relatedPosts = await getRelatedPosts(title, category, tags);
---

<main class="bg-background text-foreground flex flex-col items-center max-w-screen">
  {
    heroImage && (
      <>
        <img
          class="object-cover border-b-2 shadow-md dark:shadow-xs w-screen max-h-96 mb-0"
          src={heroImage}
          alt={imageAlt ?? title}
          transition:name={heroImage}
        />
        {
          imageCaption && (
            <div
              class="text-sm italic text-center mt-0 mb-8 max-w-screen px-4"
              set:html={htmlCaption}
            />
          )
        }
      </>
    )
  }
  <div
    class="flex flex-col p-4 pr-0 mr-0 md:p-0 max-w-prose w-full md:w-3/4 lg:w-1/2 xl:w-1/3รง"
  >
    <h1
      class="text-3xl font-semibold mt-2 mb-6 max-w-screen flex overflow-x-clip px-1"
    >
      {title}
    </h1>
    <div class="flex items-center gap-x-4 max-w-screen">
        <UserAvatar client:idle src={me.src} fallback="JH" />
      <div class="flex flex-col items-start">
        <h3 class="text-base font-semibold leading-7 tracking-tight text-foreground">
          Jake Hayes
        </h3>
        <!-- <p class="text-sm font-semibold leading-6 text-highlight mt-2">
          {JOB_TITLE}
        </p> -->
        <div class="mt-2">
          <FormattedDate date={pubDate} />
        </div>
        {
          updatedDate && (
            <div class="italic mt-2">
              Last updated on <FormattedDate date={updatedDate} />
            </div>
          )
        }
      </div>
    </div>
    {
      category && (
        <h6 class="mt-6">
          <a
            class="text-sm font-semibold leading-6 text-highlight no-underline hover:underline"
            href={`/blog/tag/${String(category)}`}
          >
            {category}
          </a>
        </h6>
      )
    }
    {
      tags && (
        <ul class="inline-flex flex-wrap gap-x-2 gap-y-1 list-none pl-0 my-2">
          {tags.map((tag) => (
            <li>
              <a
                class="text-sm font-thin text-highlight no-underline hover:underline"
                href={`/blog/tag/${String(tag)}`}
              >
                #{tag}
              </a>
            </li>
          ))}
        </ul>
      )
    }
    <hr class="my-4 max-w-screen px-4" />
    <article class="prose dark:prose-invert prose-base w-full p-2 max-w-screen md:prose-lg lg:prose-xl">
      <slot />
    </article>
    <ShareButtons title={title} description={description} />
    <Disqus client:only="react" title={title} className="mt-20" />
  </div>
  <RelatedPosts relatedPosts={relatedPosts} />
</main>
